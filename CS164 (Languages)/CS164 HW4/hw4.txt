{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf420
{\fonttbl\f0\fswiss\fcharset77 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ql\qnatural\pardirnatural

\f0\fs24 \cf0 Question 1:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf0 \
It references the first i\
\
function makeRow(val) \{\
    for(var k=1; k <= 10; k++) \{\
        document.write("<td>" + (k*val) + "</td>");\
    \}\
\}\
\
function makeTable( ) \{\
    document.write("<table>");\
    for(i=1; i <= 10; i++) \{\
        document.write("<tr>");\
        makeRow(i);\
        document.write("</tr>");\
    \}\
    document.write("</table>");\
\}\
\
makeTable();\
\
Question 2:\
function makeTable( ) \{\
    document.write("<table>");\
    for(var i=1; i <= 10; i++) \{\
        document.write("<tr>");\
        makeRow(i);\
        document.write("</tr>");\
    \}\
    document.write("</table>");\
    \
    function makeRow(val) \{\
	for(var k=1; k <= 10; k++) \{\
	    document.write("<td>" + (k*val) + "</td>");\
	\}\
    \}\
\}\
\
It doesn't support lexical scoping\
\
Question 3:\
Stack.top = function () \{  \
\
should be like this:\
Stack.prototype. top = function () \{  \
\
Question 4:\
when functionExecutor calls obj.inc, the this attribute points to Window\
\
should look like this\
function functionExecutor(fnc) \{   \
    fnc.call(obj);\
\}\
\
\
Question 5:\
false\
true\
null\
""\
[]\
\
printTruth3 does\
Question 6:\
if (x.YES() && x.NO) console.log(true); else console.log(false);\
        X.NO has the value of true/1 since  Boolean converts source code values to 1.\
if (x.YES() && x.YESO) console.log(true); else console.log(false);\
	YESO is undefined which is False\
\
Question 7:\
a)to[i+1] = from[i]; \
	the i is a string meaning the keys are strings to arrays, so when you add a 1 to it concatenation occurs.\
\
b)to[01]\
\
Question 8:\
for (var i in this) it goes through not only the initial properties of x but through the prototype object of array which contains map2}