<?xml version="1.0" ?><proj passed="false"><testcase filename="bit.grm" passed="false" ref_output="" ref_result="FINISHED" stu_output="" stu_result="FINISHED"><input filename="bit_1.in" match="false" ref_output="None
" stu_output="YES"><ref_output><![CDATA[None
]]></ref_output><stu_output><![CDATA[YES]]></stu_output></input></testcase><testcase filename="javascript.grm" passed="false" ref_output="" ref_result="FINISHED" stu_output="" stu_result="ERROR"/><testcase filename="oldsanity.grm" passed="false" ref_output="" ref_result="FINISHED" stu_output="" stu_result="FINISHED"><input filename="oldsanity_1.in" match="false" ref_output="(('*5', 0, 1, 'if'), ('@6', 1, 8, (('E', 1, 2, (('Primary', 1, 2, (('Integer', 1, 2, (('*8', 1, 2, '1337'),)),)),)), ('@7', 2, 8, (('*6', 2, 3, 'then'), ('@8', 3, 8, (('E', 3, 6, (('*1', 3, 4, '-'), ('E', 4, 6, (('*0', 4, 5, '+'), ('E', 5, 6, (('Primary', 5, 6, (('Integer', 5, 6, (('*8', 5, 6, '187'),)),)),)))))), ('@9', 6, 8, (('*7', 6, 7, 'else'), ('E', 7, 8, (('Primary', 7, 8, (('Integer', 7, 8, (('*8', 7, 8, '69'),)),)),)))))))))))
" stu_output="YES"><ref_output><![CDATA[(('*5', 0, 1, 'if'), ('@6', 1, 8, (('E', 1, 2, (('Primary', 1, 2, (('Integer', 1, 2, (('*8', 1, 2, '1337'),)),)),)), ('@7', 2, 8, (('*6', 2, 3, 'then'), ('@8', 3, 8, (('E', 3, 6, (('*1', 3, 4, '-'), ('E', 4, 6, (('*0', 4, 5, '+'), ('E', 5, 6, (('Primary', 5, 6, (('Integer', 5, 6, (('*8', 5, 6, '187'),)),)),)))))), ('@9', 6, 8, (('*7', 6, 7, 'else'), ('E', 7, 8, (('Primary', 7, 8, (('Integer', 7, 8, (('*8', 7, 8, '69'),)),)),)))))))))))
]]></ref_output><stu_output><![CDATA[YES]]></stu_output></input></testcase></proj><!-- 1193906360.99 -->
